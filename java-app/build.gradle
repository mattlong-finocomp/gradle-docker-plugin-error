plugins {
    id 'java'
    id 'com.bmuschko.docker-java-application'
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

docker {
    javaApplication {
        baseImage = "gcr.io/distroless/java11-debian11:nonroot"
        maintainer = 'matt'
        ports = [8080]
        images.add("${dockerRepository}:latest")
        images.add("${dockerRepository}:${project.version}")
    }
}

dockerCreateDockerfile {
    List<Dockerfile.Instruction> dockerfileInstructions = new ArrayList<>(instructions.get())
    // Add a "USER nonroot" instruction immediately after the FROM
    dockerfileInstructions.add(1, new Dockerfile.UserInstruction("nonroot"))
    instructions.set(dockerfileInstructions)
}

dockerBuildImage {
    // Since Google only publish tags with the major JVM version (eg. "17"), we need to explicitly pull each time to make sure we're using the latest
    pull.set(true)
}

task buildImage(group: 'docker') {
    dependsOn dockerBuildImage
}

dockerPushImage {
    images.add("${dockerRepository}:latest")
    images.add("${dockerRepository}:${project.version}")
}

test {
    useJUnitPlatform()
}